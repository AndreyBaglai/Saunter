{"version":3,"sources":["components/Logo/Logo.module.css","components/Button/CustomButton.module.css","components/Header/Header.module.css","components/Map/Map.module.css","components/PathsListWrapper/PathsListWrapper.module.css","components/Main/Main.module.css","App.module.css","store/pathsSlice.ts","store/formSlice.ts","store/currentPathSlice.ts","store/directionsSlice.ts","store/store.ts","components/Logo/Logo.tsx","components/Button/CustomButton.tsx","components/Header/Header.tsx","components/Map/Map.tsx","components/PathView/PathView.tsx","components/ListPaths/ListPaths.tsx","components/PathsListWrapper/PathsListWrapper.tsx","components/Main/Main.tsx","components/Form/FormModal.tsx","App.tsx","index.tsx","components/Form/FormModal.module.css","components/ListPaths/ListPaths.module.css","components/PathView/PathView.module.css"],"names":["module","exports","pathsSlice","createSlice","name","initialState","id","title","description","short","full","favorite","selected","distance","directions","lat","lng","reducers","add","state","action","payload","remove","filter","path","setFavorite","find","item","newState","removeFavorite","select","forEach","formSlice","isOpen","open","close","currentPathSlice","set","directionsSlice","clean","configureStore","reducer","paths","pathsReducer","form","formReducer","currentPath","currentPathReducer","directionsReducer","Logo","AppstoreTwoTone","twoToneColor","className","styles","icon","Text","text","strong","CustomButton","size","shape","htmlType","handleFunc","onClick","customBtn","type","Header","dispatch","useDispatch","header","extra","Map","isEdit","isSetMarkers","pathInfo","useSelector","useEffect","map","poly","Loader","apiKey","process","version","load","then","mapContainer","document","getElementById","google","maps","center","zoom","Polyline","strokeColor","strokeOpacity","strokeWeight","setMap","addListener","e","getPath","push","latLng","dataCoords","Be","Marker","position","getLength","coord","markerCoords","mapWrapper","PathView","useState","setPathInfo","isUpdateBtn","setIsUpdateBtn","selectPath","span","offset","pathView","Object","keys","length","headStyle","color","fontSize","card","style","width","fullDescription","wrapperBtn","data-id","block","target","currentTarget","dataset","danger","defaultText","ListPaths","isFiltered","pathsState","onSelectedPath","list","dataSource","bordered","locale","emptyText","renderItem","Item","listItem","Meta","meta","avatar","EnvironmentTwoTone","itemMarker","StarFilled","StarOutlined","Paragraph","RightOutlined","leftArrow","PathsListWrapper","setPaths","isFilter","setIsFilter","Search","inputSearch","placeholder","onSearch","value","filterPaths","toLowerCase","includes","enterButton","Main","main","justify","rootFormContainer","FormModal","totalDistance","setTotalDistance","includeMarkers","setIncludeMarkers","countDistance","destination","origin","a","DistanceMatrixService","getDistanceMatrix","origins","destinations","travelMode","TravelMode","DRIVING","response","status","rows","elements","Number","toFixed","err","console","log","ReactDOM","createPortal","modalWrapper","modalTitle","CloseOutlined","modal","layout","onFinish","formData","newPath","nanoid","shortText","fullText","formField","label","rules","required","message","TextArea","removeBtn","App","app","render","store"],"mappings":"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","file":"static/js/main.841f48ff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Logo_text__3aOy9\",\"icon\":\"Logo_icon__2eEqR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"customBtn\":\"CustomButton_customBtn__3OzjV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3g-qh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mapWrapper\":\"Map_mapWrapper__3_bo1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputSearch\":\"PathsListWrapper_inputSearch__1dHfs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__vN_Z3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1oyYf\"};","import { createSlice } from '@reduxjs/toolkit';\r\nimport { PathModel } from 'model/path-model';\r\n\r\nconst initialState = [\r\n  {\r\n    id: 'dhfhdhj',\r\n    title: 'Test path',\r\n    description: {\r\n      short: 'Some short text',\r\n      full: 'Some full text',\r\n    },\r\n    favorite: false,\r\n    selected: false,\r\n    distance: 0.534,\r\n    directions: [\r\n      { lat: () => 48.4499013737848, lng: () => 34.98049320537708 },\r\n      { lat: () => 48.448591982505036, lng: () => 34.98019279796741 },\r\n    ],\r\n  },\r\n];\r\n\r\nconst pathsSlice = createSlice({\r\n  name: 'paths',\r\n  initialState,\r\n  reducers: {\r\n    add(state, action) {\r\n      return [...state, action.payload];\r\n    },\r\n\r\n    remove(state, action) {\r\n      return state.filter((path) => path.id !== action.payload);\r\n    },\r\n\r\n    setFavorite(state, action) {\r\n      let path = state.find((item) => item.id === action.payload) as PathModel;\r\n      const newState = state.filter((path) => path.id !== action.payload);\r\n\r\n      path = { ...path, favorite: true };\r\n      return [path, ...newState];\r\n    },\r\n\r\n    removeFavorite(state, action) {\r\n      let path = state.find((item) => item.id === action.payload) as PathModel;\r\n      const newState = state.filter((path) => path.id !== action.payload);\r\n\r\n      path = { ...path, favorite: false };\r\n      return [...newState, path];\r\n    },\r\n\r\n    select(state, action) {\r\n      state.forEach((path) => {\r\n        path.id === action.payload ? (path.selected = true) : (path.selected = false);\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\nexport default pathsSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  isOpen: false,\r\n};\r\n\r\nconst formSlice = createSlice({\r\n  name: 'form',\r\n  initialState,\r\n  reducers: {\r\n    open(state, action) {\r\n      return { ...state, isOpen: action.payload };\r\n    },\r\n    \r\n    close(state, action) {\r\n      return { ...state, isOpen: action.payload };\r\n    },\r\n  },\r\n});\r\n\r\nexport default formSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {};\r\n\r\nconst currentPathSlice = createSlice({\r\n  name: 'currentPath',\r\n  initialState,\r\n  reducers: {\r\n    set(state, action) {\r\n      return { ...action.payload };\r\n    },\r\n\r\n    remove(state, action) {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport default currentPathSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {};\r\n\r\nconst directionsSlice = createSlice({\r\n  name: 'directions',\r\n  initialState,\r\n  reducers: {\r\n    add(state, action) {\r\n      return [...action.payload];\r\n    },\r\n    \r\n    clean(state, action) {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport default directionsSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport pathsReducer from './pathsSlice';\r\nimport formReducer from './formSlice';\r\nimport currentPathReducer from './currentPathSlice';\r\nimport directionsReducer from './directionsSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    paths: pathsReducer,\r\n    form: formReducer,\r\n    currentPath: currentPathReducer,\r\n    directions: directionsReducer,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { Typography } from 'antd';\r\nimport { AppstoreTwoTone } from '@ant-design/icons';\r\n\r\nimport styles from './Logo.module.css';\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div>\r\n      <AppstoreTwoTone twoToneColor=\"#9aed00\" className={styles.icon} />\r\n      <Typography.Text className={styles.text} strong={true}>\r\n        Saunter\r\n      </Typography.Text>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nimport { SizeType } from 'antd/lib/config-provider/SizeContext';\r\n\r\nimport styles from './CustomButton.module.css';\r\n\r\ntype CustomButtonPropsType = {\r\n  text: string;\r\n  size: SizeType;\r\n  htmlType?: any;\r\n  shape?: any;\r\n  icon?: any;\r\n  handleFunc: any;\r\n};\r\n\r\nconst CustomButton = ({\r\n  text = '',\r\n  size = 'middle',\r\n  shape = 'round',\r\n  icon,\r\n  htmlType = 'button',\r\n  handleFunc = () => {},\r\n}: CustomButtonPropsType) => {\r\n  return (\r\n    <Button\r\n      onClick={handleFunc}\r\n      className={styles.customBtn}\r\n      size={size}\r\n      type=\"ghost\"\r\n      shape={shape}\r\n      icon={icon}\r\n      htmlType={htmlType}>\r\n      {text}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default CustomButton;\r\n","import React from 'react';\r\nimport { PageHeader } from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport Logo from 'components/Logo/Logo';\r\nimport CustomButton from 'components/Button/CustomButton';\r\n\r\nimport styles from './Header.module.css';\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n  const onOpenForm = () => dispatch({ type: 'form/open', payload: true });\r\n\r\n  return (\r\n    <PageHeader\r\n      className={styles.header}\r\n      title={<Logo />}\r\n      extra={[\r\n        <CustomButton\r\n          key=\"1\"\r\n          size=\"large\"\r\n          text=\"Add path\"\r\n          htmlType=\"button\"\r\n          handleFunc={onOpenForm}></CustomButton>,\r\n      ]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Loader } from '@googlemaps/js-api-loader';\r\n\r\nimport { StoreModel } from 'model/store-model';\r\n\r\nimport styles from './Map.module.css';\r\n\r\ntype MapPropsType = {\r\n  id: string;\r\n  isEdit: boolean;\r\n  isSetMarkers: boolean;\r\n  path?: any;\r\n};\r\n\r\nconst Map = ({ id, isEdit, isSetMarkers }: MapPropsType) => {\r\n  const pathInfo = useSelector((state: StoreModel) => state.currentPath);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    let map: google.maps.Map<HTMLElement>;\r\n    let poly: any;\r\n\r\n    const loader = new Loader({\r\n      apiKey: `${process.env.REACT_APP_API_KEY}`,\r\n      version: 'weekly',\r\n    });\r\n\r\n    loader.load().then(() => {\r\n      const mapContainer = document.getElementById(id) as HTMLElement;\r\n\r\n      if (mapContainer) {\r\n        map = new google.maps.Map(mapContainer, {\r\n          center: { lat: 48.450001, lng: 34.983334 },\r\n          zoom: 15,\r\n        });\r\n\r\n        poly = new google.maps.Polyline({\r\n          strokeColor: '#9aed00',\r\n          strokeOpacity: 1.0,\r\n          strokeWeight: 3,\r\n        });\r\n\r\n        poly.setMap(map);\r\n\r\n        // Add a listener for the click event\r\n        isEdit &&\r\n          map.addListener('click', (e: google.maps.MapMouseEvent) => {\r\n            const path = poly.getPath();\r\n\r\n            // Because path is an MVCArray, we can simply append a new coordinate\r\n            // and it will automatically appear.\r\n            path.push(e.latLng);\r\n\r\n            const dataCoords = poly.getPath().Be || [];\r\n\r\n            if (dataCoords) {\r\n              dispatch({ type: 'directions/add', payload: [...dataCoords] });\r\n            }\r\n\r\n            // Add a new marker at the new plotted point on the polyline.\r\n            new google.maps.Marker({\r\n              position: e.latLng,\r\n              title: '#' + path.getLength(),\r\n              map,\r\n            });\r\n          });\r\n\r\n        // Set polyline on map\r\n        !isEdit &&\r\n          pathInfo?.directions &&\r\n          (poly = new google.maps.Polyline({\r\n            path: [\r\n              ...pathInfo?.directions.map((coord: any) => ({\r\n                lat: coord.lat(),\r\n                lng: coord.lng(),\r\n              })),\r\n            ],\r\n            strokeColor: '#9aed00',\r\n            strokeOpacity: 1.0,\r\n            strokeWeight: 3,\r\n          }));\r\n\r\n        poly.setMap(map);\r\n\r\n        // Set markers on map\r\n        !isEdit &&\r\n          pathInfo?.directions &&\r\n          pathInfo.directions.forEach((markerCoords: any) => {\r\n            new google.maps.Marker({\r\n              position: {\r\n                lat: markerCoords.lat(),\r\n                lng: markerCoords.lng(),\r\n              },\r\n              map,\r\n            });\r\n          });\r\n      }\r\n    });\r\n  }, [isEdit, isSetMarkers, pathInfo, id]);\r\n\r\n  return <div id={id} className={styles.mapWrapper}></div>;\r\n};\r\n\r\nexport default Map;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Col, Button, Card, Typography } from 'antd';\r\n\r\nimport Map from 'components/Map/Map';\r\n\r\nimport { StoreModel } from 'model/store-model';\r\nimport { PathModel } from 'model/path-model';\r\n\r\nimport styles from './PathView.module.css';\r\n\r\nconst PathView = () => {\r\n  const [pathInfo, setPathInfo] = useState<PathModel | null>(null);\r\n  const [isUpdateBtn, setIsUpdateBtn] = useState(false);\r\n\r\n  const selectPath: any = useSelector((state: StoreModel) => state.currentPath);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setPathInfo(selectPath);\r\n  }, [pathInfo, selectPath, isUpdateBtn]);\r\n\r\n  const onRemovePath = (e: React.MouseEvent) => {\r\n    const target = e.currentTarget as HTMLElement;\r\n    setPathInfo(null);\r\n\r\n    dispatch({ type: 'paths/remove', payload: target.dataset.id });\r\n    dispatch({ type: 'currentPath/remove', payload: null });\r\n  };\r\n\r\n  const onSetFavorite = (e: React.MouseEvent) => {\r\n    const target = e.currentTarget as HTMLElement;\r\n    setIsUpdateBtn(state => !state);\r\n    dispatch({ type: 'paths/setFavorite', payload: target.dataset.id });\r\n  };\r\n\r\n  const onRemoveFavorite = (e: React.MouseEvent) => {\r\n    const target = e.currentTarget as HTMLElement;\r\n    setIsUpdateBtn(state => !state);\r\n    dispatch({ type: 'paths/removeFavorite', payload: target.dataset.id });\r\n  };\r\n\r\n  return (\r\n    <Col span={11} offset={1} className={styles.pathView}>\r\n      {pathInfo && Object.keys(selectPath).length ? (\r\n        <Card\r\n          headStyle={{ color: '#fff', fontSize: '24px' }}\r\n          className={styles.card}\r\n          title={pathInfo.title}\r\n          extra={<h5 className={styles.distance}>{pathInfo.distance} km</h5>}\r\n          style={{ width: '100%' }}>\r\n          <p className={styles.fullDescription}>{pathInfo.description?.full}</p>\r\n          <Map id=\"pathMap\" isEdit={false} isSetMarkers={true} />\r\n\r\n          <div className={styles.wrapperBtn}>\r\n            {!pathInfo.favorite && !isUpdateBtn ? (\r\n              <Button data-id={pathInfo.id} block type=\"link\" onClick={onSetFavorite}>\r\n                Add to favorite\r\n              </Button>\r\n            ) : (\r\n              <Button data-id={pathInfo.id} block type=\"link\" onClick={onRemoveFavorite}>\r\n                Remove from favorite\r\n              </Button>\r\n            )}\r\n            <Button data-id={pathInfo.id} block type=\"link\" danger onClick={onRemovePath}>\r\n              Remove\r\n            </Button>\r\n          </div>\r\n        </Card>\r\n      ) : (\r\n        <Typography.Text className={styles.defaultText}>Select any path</Typography.Text>\r\n      )}\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default PathView;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { List, Typography } from 'antd';\r\nimport { EnvironmentTwoTone, RightOutlined, StarFilled, StarOutlined } from '@ant-design/icons';\r\n\r\nimport { StoreModel } from 'model/store-model';\r\nimport { PathModel } from 'model/path-model';\r\n\r\nimport styles from './ListPaths.module.css';\r\n\r\ntype ListPathPropsType = {\r\n  paths: PathModel[];\r\n  isFiltered: boolean;\r\n};\r\n\r\nconst ListPaths = ({ paths, isFiltered }: ListPathPropsType) => {\r\n  const pathsState = useSelector((state: StoreModel) => state.paths);\r\n  const dispatch = useDispatch();\r\n\r\n  const onSelectedPath = (e: React.MouseEvent) => {\r\n    const target = e.currentTarget as HTMLElement;\r\n    const path = pathsState.find((path: PathModel) => path.id === target.id);\r\n\r\n    dispatch({ type: 'paths/select', payload: target.id });\r\n    dispatch({\r\n      type: 'currentPath/set',\r\n      payload: path,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <List\r\n      className={styles.list}\r\n      dataSource={isFiltered ? paths : pathsState}\r\n      bordered={true}\r\n      locale={{\r\n        emptyText: <Typography.Text className={styles.emptyText}>No more paths</Typography.Text>,\r\n      }}\r\n      renderItem={(path: PathModel) => (\r\n        <List.Item key={path.id} className={styles.listItem} id={path.id} onClick={onSelectedPath}>\r\n          <List.Item.Meta\r\n            className={styles.meta}\r\n            avatar={<EnvironmentTwoTone className={styles.itemMarker} twoToneColor=\"true\" />}\r\n            title={\r\n              <>\r\n                {path.favorite ? (\r\n                  <StarFilled style={{ color: 'yellow' }} />\r\n                ) : (\r\n                  <StarOutlined style={{ color: 'yellow' }} />\r\n                )}\r\n                {path.title}\r\n              </>\r\n            }\r\n            description={\r\n              <Typography.Paragraph className={styles.description}>\r\n                {path.description.short}\r\n              </Typography.Paragraph>\r\n            }\r\n          />\r\n\r\n          <Typography.Text className={styles.distance}>{`${path.distance} km`}</Typography.Text>\r\n          <RightOutlined className={styles.leftArrow} />\r\n        </List.Item>\r\n      )}></List>\r\n  );\r\n};\r\n\r\nexport default ListPaths;\r\n","import React, { useState } from 'react';\r\nimport { Col, Input, Row } from 'antd';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport ListPaths from 'components/ListPaths/ListPaths';\r\nimport CustomButton from 'components/Button/CustomButton';\r\n\r\nimport { StoreModel } from 'model/store-model';\r\nimport { PathModel } from 'model/path-model';\r\n\r\nimport styles from './PathsListWrapper.module.css';\r\n\r\nconst PathsListWrapper = () => {\r\n  const pathsState = useSelector((state: StoreModel) => state.paths);\r\n\r\n  const [paths, setPaths] = useState<PathModel[]>(pathsState);\r\n  const [isFilter, setIsFilter] = useState(false);\r\n\r\n  const onFilterPaths = (value: string) => {\r\n    const filterPaths = pathsState.filter((path: PathModel) =>\r\n      path.title.toLowerCase().includes(value.toLowerCase()),\r\n    );\r\n\r\n    setPaths(filterPaths);\r\n    setIsFilter(true);\r\n  };\r\n\r\n  const onSetAllPathsToList = () => {\r\n    setPaths(pathsState);\r\n    setIsFilter(false);\r\n  };\r\n\r\n  return (\r\n    <Col span={12}>\r\n      <Row>\r\n        <Col span={17}>\r\n          <Input.Search\r\n            className={styles.inputSearch}\r\n            placeholder=\"Input search text\"\r\n            onSearch={onFilterPaths}\r\n            enterButton\r\n          />\r\n        </Col>\r\n\r\n        <Col span={5} offset={2}>\r\n          <CustomButton\r\n            text=\"All paths\"\r\n            size=\"middle\"\r\n            shape=\"round\"\r\n            handleFunc={onSetAllPathsToList}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <ListPaths paths={paths} isFiltered={isFilter} />\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default PathsListWrapper;\r\n","import React from 'react';\r\nimport { Row } from 'antd';\r\n\r\nimport PathView from 'components/PathView/PathView';\r\nimport PathsListWrapper from 'components/PathsListWrapper/PathsListWrapper';\r\n\r\nimport styles from './Main.module.css';\r\n\r\nconst Main = () => {\r\n  return (\r\n    <main className={styles.main}>\r\n      <Row justify=\"space-around\">\r\n        <PathsListWrapper />\r\n        <PathView />\r\n      </Row>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { nanoid } from '@reduxjs/toolkit';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\nimport { Col, PageHeader, Row, Typography, Form, Input } from 'antd';\r\n\r\nimport CustomButton from 'components/Button/CustomButton';\r\nimport Map from 'components/Map/Map';\r\n\r\nimport { StoreModel } from 'model/store-model';\r\nimport { PathModel } from 'model/path-model';\r\nimport { FormDataModel } from 'model/formData-model';\r\n\r\nimport styles from './FormModal.module.css';\r\n\r\nconst rootFormContainer = document.getElementById('root-form') as HTMLElement;\r\n\r\nconst FormModal = () => {\r\n  const [totalDistance, setTotalDistance] = useState(0);\r\n  const [includeMarkers, setIncludeMarkers] = useState(false);\r\n\r\n  const isOpen = useSelector((state: StoreModel) => state.form.isOpen);\r\n  const directions = useSelector((state: StoreModel) => state.directions);\r\n  const dispatch = useDispatch();\r\n\r\n  const countDistance = async (destination: any, origin: any) => {\r\n    const service = new google.maps.DistanceMatrixService();\r\n\r\n    service.getDistanceMatrix(\r\n      {\r\n        origins: [{ lat: origin.lat(), lng: origin.lng() }, 'Start'],\r\n        destinations: ['End', { lat: destination.lat(), lng: destination.lng() }],\r\n        travelMode: google.maps.TravelMode.DRIVING,\r\n      },\r\n      (response, status) => {\r\n        if (status === 'OK') {\r\n          setTotalDistance((state) => {\r\n            try {\r\n              state += response.rows[0].elements[1].distance.value / 1000;\r\n              return Number(state.toFixed(3));\r\n            } catch (err) {\r\n              console.log('Failed to build routes');\r\n              setIncludeMarkers(!includeMarkers);\r\n              dispatch({ type: 'directions/clean', payload: [] });\r\n              return 0;\r\n            }\r\n          });\r\n        }\r\n      },\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (directions.length > 1) {\r\n      const destination = directions[directions.length - 1];\r\n      const origin = directions[directions.length - 2];\r\n      countDistance(destination, origin);\r\n    }\r\n  }, [directions]);\r\n\r\n  const onCloseForm = () => {\r\n    setTotalDistance(0);\r\n    dispatch({ type: 'form/close', payload: false });\r\n    dispatch({ type: 'directions/clean', payload: [] });\r\n  };\r\n\r\n  const onRemoveMarkers = () => {\r\n    setTotalDistance(0);\r\n    setIncludeMarkers(!includeMarkers);\r\n    dispatch({ type: 'directions/clean', payload: [] });\r\n  };\r\n\r\n  const onCreatePath = (formData: FormDataModel) => {\r\n    if (totalDistance === 0) return;\r\n\r\n    const newPath: PathModel = {\r\n      id: nanoid(),\r\n      title: formData.title,\r\n      description: {\r\n        short: formData.shortText,\r\n        full: formData.fullText,\r\n      },\r\n      selected: false,\r\n      distance: totalDistance,\r\n      favorite: false,\r\n      directions,\r\n    };\r\n\r\n    setTotalDistance(0);\r\n    dispatch({ type: 'paths/add', payload: newPath });\r\n    dispatch({ type: 'form/close', payload: false });\r\n    dispatch({ type: 'directions/clean', payload: [] });\r\n  };\r\n\r\n  return isOpen\r\n    ? ReactDOM.createPortal(\r\n        <Row className={styles.modalWrapper}>\r\n          <Col span={16} offset={4}>\r\n            <PageHeader\r\n              className={styles.modalTitle}\r\n              title=\"Add new path\"\r\n              extra={[\r\n                <CustomButton\r\n                  handleFunc={onCloseForm}\r\n                  key=\"2\"\r\n                  shape=\"circle\"\r\n                  icon={<CloseOutlined />}\r\n                  size=\"middle\"\r\n                  text=\"\"\r\n                />,\r\n              ]}\r\n            />\r\n\r\n            <Row className={styles.modal}>\r\n              <Col span={11}>\r\n                <Form\r\n                  className={styles.form}\r\n                  layout=\"vertical\"\r\n                  name=\"new-path\"\r\n                  onFinish={onCreatePath}>\r\n                  <Form.Item\r\n                    className={styles.formField}\r\n                    name=\"title\"\r\n                    label=\"Title\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Please, input title path',\r\n                      },\r\n                    ]}>\r\n                    <Input />\r\n                  </Form.Item>\r\n\r\n                  <Form.Item\r\n                    className={styles.formField}\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Please, input short description path',\r\n                      },\r\n                    ]}\r\n                    name=\"shortText\"\r\n                    label=\"Short description\">\r\n                    <Input.TextArea />\r\n                  </Form.Item>\r\n\r\n                  <Form.Item\r\n                    className={styles.formField}\r\n                    name=\"fullText\"\r\n                    label=\"Full description\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Please, input full description path',\r\n                      },\r\n                    ]}>\r\n                    <Input.TextArea />\r\n                  </Form.Item>\r\n\r\n                  <Form.Item>\r\n                    <Typography.Text\r\n                      className={styles.distance}>{`Length: ${totalDistance} km`}</Typography.Text>\r\n                  </Form.Item>\r\n\r\n                  <Form.Item>\r\n                    <CustomButton\r\n                      handleFunc={() => {}}\r\n                      text=\"Add path\"\r\n                      size=\"large\"\r\n                      htmlType=\"submit\"\r\n                    />\r\n                  </Form.Item>\r\n                </Form>\r\n              </Col>\r\n\r\n              <Col span={11} offset={2} className={styles.mapWrapper}>\r\n                <Map id=\"mapForm\" isEdit={true} isSetMarkers={includeMarkers} />\r\n                <div className={styles.removeBtn}>\r\n                  <CustomButton\r\n                    text=\"Remove markers\"\r\n                    size=\"middle\"\r\n                    shape=\"round\"\r\n                    handleFunc={onRemoveMarkers}\r\n                  />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>,\r\n        rootFormContainer,\r\n      )\r\n    : ReactDOM.createPortal('', rootFormContainer);\r\n};\r\n\r\nexport default FormModal;\r\n","import React from 'react';\nimport 'antd/dist/antd.css';\n\nimport Header from 'components/Header/Header';\nimport Main from 'components/Main/Main';\nimport FormModal from 'components/Form/FormModal';\n\nimport styles from 'App.module.css';\n\nconst App = () => {\n  return (\n    <div className={styles.app}>\n      <Header />\n      <Main />\n      <FormModal />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport store from 'store/store';\n\nimport App from 'App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalWrapper\":\"FormModal_modalWrapper__2xo5J\",\"modal\":\"FormModal_modal__La-XF\",\"modalTitle\":\"FormModal_modalTitle__1hpE_\",\"form\":\"FormModal_form__6G8k6\",\"formField\":\"FormModal_formField__1ikdT\",\"mapWrapper\":\"FormModal_mapWrapper__3pgTh\",\"distance\":\"FormModal_distance__16jLa\",\"removeBtn\":\"FormModal_removeBtn__17BLN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ListPaths_list__Wqp1r\",\"listItem\":\"ListPaths_listItem__2Od9X\",\"emptyText\":\"ListPaths_emptyText__389iI\",\"leftArrow\":\"ListPaths_leftArrow__9TKrB\",\"meta\":\"ListPaths_meta__25mV8\",\"title\":\"ListPaths_title__1_0sF\",\"description\":\"ListPaths_description__1WaKo\",\"distance\":\"ListPaths_distance__3cCWX\",\"itemMarker\":\"ListPaths_itemMarker__37IzZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pathView\":\"PathView_pathView__3htwf\",\"card\":\"PathView_card__1-EhE\",\"distance\":\"PathView_distance__eY3PK\",\"wrapperBtn\":\"PathView_wrapperBtn__vT0R6\",\"defaultText\":\"PathView_defaultText__321ak\",\"fullDescription\":\"PathView_fullDescription__37s4D\"};"],"sourceRoot":""}